---
- name: Adding variable    
  hosts: "{{ env }}"
  vars:
    ansible_user: "{{ login_user }}"
    ansible_password: "{{ login_password }}"
    ansible_port: 5985
    ansible_winrm_transport: ntlm
    ansible_connection: "winrm"
    ansible_winrm_server_cert_validation: ignore
    vars:
      service_list: "{{ hostvars['ansible_host']['service_list'] }}"
      
  tasks:
  - debug:
      msg: "{{ ansible_host }}"
      #check_service: "{{ service_list.split(',') }}"
    
- name: add server
  hosts: localhost
  vars:
    Server_Name: "{{ Server_Name }}"
    check: "{{ Server_Name.split(',') }}"
    password: "{{ login_password }}"
  tasks: 
  - add_host:
      name: "{{ item }}"
      groups: test
    with_items: "{{ check }}"
    
- name: Selection
  hosts: test
  vars:
    ansible_user: "{{ login_user }}"
    ansible_password: "{{ login_password }}"
    ansible_port: 5985
    ansible_winrm_transport: ntlm
    ansible_connection: "winrm"
    ansible_winrm_server_cert_validation: ignore
    Server_Name: "{{ Server_Name }}"
    check: "{{ Server_Name.split(',') }}"
    Processor_Type: "{{ Processor_Type }}"
    optJDK8: "{{ optJDK8 }}"
    optJDK11: "{{ optJDK11 }}"
    old_java8_version: "{{ old_java8_version }}"
    new_java8_version: "{{ new_java8_version }}"
    old_java11_version: "{{ old_java11_version }}"
    new_java11_version: "{{ new_java11_version }}"
    Executable_name_java8: "{{ Executable_name_java8 }}"
    Executable_name_java11: "{{ Executable_name_java11 }}"
    Root_cert: "{{ Root_cert }}"
    Inter_cert: "{{ Inter_cert }}"
    HOME_TYPE: "{{ HOME_TYPE }}"
    Deployment_Type: "{{ Deployment_Type }}"
    UG: "Upgrade"
    RB: "Rollback"
    root_cert_path: C:\TEMP\Java_Upgrade\{{ Change_Number }}\{{ Root_cert }}
    inter_cert_path: C:\TEMP\Java_Upgrade\{{ Change_Number }}\{{ Inter_cert }}
    java_path8: C:\Program Files\Java\jdk{{ new_java8_version }}\jre\lib\security
    truststore_path8: C:\Program Files\Java\jdk{{ new_java8_version }}\jre\lib\security\cacerts
    truststore_password8: changeit
    java_path11: C:\Program Files\Java\jdk{{ new_java11_version }}\lib\security
    truststore_path11: C:\Program Files\Java\jdk{{ new_java11_version }}\lib\security\cacerts
    truststore_password11: changeit
    service_list: "{{ service_list }}"

  tasks:
  - set_fact: Java8_url="https://artifactory.fis.dev/artifactory/dsd-maven-snapshot-local/{{ Executable_name_java8 }}"
  - set_fact: Java11_url="https://artifactory.fis.dev/artifactory/dsd-maven-snapshot-local/{{ Executable_name_java11 }}"
  - set_fact: Root_cert_url="https://artifactory.fis.dev/artifactory/dsd-maven-snapshot-local/{{ Root_cert }}"
  - set_fact: Inter_cert_url="https://artifactory.fis.dev/artifactory/dsd-maven-snapshot-local/{{ Inter_cert }}"
  - set_fact: 
       output_string="{{ old_java8_version.split('_')  if ( "YES" in optJDK8 ) else 'pass' }}" 
  - debug:
      msg: "{{ output_string[1] }}"
    register: debug_msg
  - debug:
      msg: "{{ debug_msg.msg }}"
  - set_fact: my_int_var="{{ debug_msg.msg | int }}"
  - debug:
      msg: "{{ my_int_var }}"
  #- debug:
      #msg: "{{ service_list}}"
    #with_items: "{{ service }}"
    
  - include: Sample_upgrade.yml
    when: UG in Deployment_Type
    
  - include: Rollback.yml
    when: RB in Deployment_Type
    
- name: Collect details to send email
  hosts: test
  vars:
    ansible_user: "{{ login_user }}"
    ansible_password: "{{ login_password }}"
    ansible_port: 5985
    ansible_winrm_transport: ntlm
    ansible_connection: "winrm"
    ansible_winrm_server_cert_validation: ignore
    Server_Name: "{{ Server_Name }}"
    check: "{{ Server_Name.split(',') }}"
    UG: "Upgrade"
    RB: "Rollback"
    new_java8_version: "{{ new_java8_version }}"
    new_java11_version: "{{ new_java11_version }}"
  tasks:
  - name: Check Java 8 version
    win_shell: 'reg query "HKEY_LOCAL_MACHINE\SOFTWARE\JavaSoft\Java Runtime Environment\1.8" /v JavaHome'
    register: java8
    when: optJDK8 == "YES" 

  - name: Extract Java version
    debug:
      msg: "{{ java8.stdout | regex_search('1.8.0_\\d+') }}"
    register: finaljava8
    when: optJDK8 == "YES" 

  - name: Check Java 11 JDK version
    win_shell: 'reg query "HKEY_LOCAL_MACHINE\SOFTWARE\JavaSoft\JDK" /s /f "JavaHome"'
    register: jdk11
    when: optJDK11 == "YES" 

  - name: Extract Java version
    debug:
      msg: "{{ jdk11.stdout | regex_search('(\\d+\\.\\d+\\.\\d+)') }}"
    register: finaljava11
    when: optJDK11 == "YES"
    
- name: Collect details to send email
  hosts: localhost
  vars:
    Email_Notification: "{{ Email_Notification }}"
    Server_Name: "{{ Server_Name }}"
    check: "{{ Server_Name.split(',') }}"
    UG: "Upgrade"
    RB: "Rollback"
    new_java8_version: "{{ new_java8_version }}"
    new_java11_version: "{{ new_java11_version }}"
  tasks:
  - name: Delete file
    file:
      path: Deployment_Status_Java8.txt
      state: absent
    when: optJDK8 == "YES"
    
  - include: Status_File_Java8.yml
    with_items: "{{ check }}"
    when: optJDK8 == "YES" 

  - name: Delete file
    file:
      path: Deployment_Status_Java11.txt
      state: absent
    when: optJDK11 == "YES"
    
  - include: Status_File_Java11.yml
    with_items: "{{ check }}"
    when: optJDK11 == "YES"
    
  - name: Sending an e-mail using  SMTP servers
    mail:
      host: smtprelay.messageprovider.com
      port: 25
      from: javaupdatenotification@fisglobal.com
      to: "{{ Email_Notification }}"
      subject: Update- After Java Upgrade
      body: 
        <p>Please find the attached success and failed deployment report from the corresponding servers</p>
        </br>
        <p>Deployment Status:</br>{{ lookup('file', 'Deployment_Status_Java8.txt') }}</p>
      subtype: html
      attach:
       - Deployment_Status_Java8.txt
    delegate_to: localhost
    when: optJDK8 == "YES"

  - name: Sending an e-mail using  SMTP servers
    mail:
      host: smtprelay.messageprovider.com
      port: 25
      from: javaupdatenotification@fisglobal.com
      to: "{{ Email_Notification }}"
      subject: Update- After Java Upgrade
      body: 
        <p>Please find the attached success and failed deployment report from the corresponding servers</p>
        </br>
        <p>Deployment Status:</br>{{ lookup('file', 'Deployment_Status_Java11.txt') }}</p>
      subtype: html
      attach:
       - Deployment_Status_Java11.txt
    delegate_to: localhost
    when: optJDK11 == "YES"
