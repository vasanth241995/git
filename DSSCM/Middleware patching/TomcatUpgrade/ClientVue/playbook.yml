- name: Tomcat upgrade
  hosts: "{{zone}}"
  become_user: "{{su_user}}"
  gather_facts: yes

  tasks:

    - name: Create directories
      file: path="{{item}}" state=directory mode=0755
      with_items:
        - "{{backup_path}}/{{change_no}}/{{bld_no}}"
        - "{{backup_path}}/{{change_no}}/{{bld_no}}/to_copy"

    - name: Shutdown ClientVue
      shell: "cd {{app_loc}}/{{sym_link}} ; {{app_loc}}/{{sym_link}}/bin/shutdown.sh"
      register: stop_output
      ignore_errors: yes
      when: restart|lower == "yes"

    - name: Show Stop Output
      debug: var=stop_output.stdout_lines
      when: restart|lower == "yes"

    - name: Move folders/files to copy to a temp location
      shell: "mv {{app_loc}}/{{sym_link}}/{{item}} {{backup_path}}/{{change_no}}/{{bld_no}}/to_copy/"
      with_items:
        - "{{folders_to_copy}}"
      when: zone|lower == "dev" or zone|lower == "qc"

    - name: Move folders/files to copy to a temp location from {{inventory_hostname}}
      shell: "mv {{app_loc}}/{{sym_link}}/{{item}} {{backup_path}}/{{change_no}}/{{bld_no}}/to_copy/"
      with_items:
        - "{{folders_to_copy_node1}}"
      when: ( zone|lower == "uat" or zone|lower == "prod" ) and ( inventory_hostname|lower == "node1" )

    - name: Move folders/files to copy to a temp location from {{inventory_hostname}}
      shell: "mv {{app_loc}}/{{sym_link}}/{{item}} {{backup_path}}/{{change_no}}/{{bld_no}}/to_copy/"
      with_items:
        - "{{folders_to_copy_node2}}"
      when: ( zone|lower == "uat" or zone|lower == "prod" ) and ( inventory_hostname|lower == "node2" )

    - name: Rename existing tomcat
      shell: "mv {{app_loc}}/{{old_tmct}} {{app_loc}}/{{old_tmct}}_bkp"

    - name: Install Tomcat
      unarchive:
        src: "{{release_path}}/{{change_no}}/{{pre_bld_no}}/{{tmct_vrsn}}.tgz"
        dest: "{{app_loc}}/"
        remote_src: yes
        mode: 0755

    - name: Copy setenv.sh
      shell: "cd {{app_loc}}/{{old_tmct}}_bkp/bin ; cp -r {{item}} {{app_loc}}/apache-tomcat-{{tmct_vrsn}}/bin/"
      with_items:
        - "{{files_from_bin}}"

    - name: Copy files from lib
      shell: "cd {{app_loc}}/{{old_tmct}}_bkp/lib ; cp -r {{item}} {{app_loc}}/apache-tomcat-{{tmct_vrsn}}/lib/"
      with_items:
        - "{{files_from_lib}}"

    - name: Copy chex folder from conf
      shell: "cd {{app_loc}}/{{old_tmct}}_bkp/conf; cp -r {{item}} {{app_loc}}/apache-tomcat-{{tmct_vrsn}}/conf/"
      with_items:
        - "{{files_from_conf}}"      

    - name: Remove webapps from new version
      shell: "rm -rf {{app_loc}}/apache-tomcat-{{tmct_vrsn}}/webapps"

    - name: Add java and jre home to catalina.sh
      blockinfile:
        path: "{{app_loc}}/apache-tomcat-{{tmct_vrsn}}/bin/catalina.sh"
        block: |
          export JAVA_HOME="{{java_home}}"
          export JRE_HOME="{{jre_home}}"
          CATALINA_PID="{{app_loc}}/{{sym_link}}/bin/catalina.pid"
        insertbefore: "cygwin=false"

    ## EDIT SERVER.XML

    - name: Remove all comments from server.xml
      shell: sed -i 's/<!--/\x0<!--/g;s/-->/-->\x0/g' {{app_loc}}/apache-tomcat-{{tmct_vrsn}}/conf/server.xml
      args:
        executable: /bin/bash

    - name: Pretty-print the server.xml
      shell: grep -zv '^<!--' {{app_loc}}/apache-tomcat-{{tmct_vrsn}}/conf/server.xml | tr -d '\0' | grep -v "^\s*$" > {{app_loc}}/apache-tomcat-{{tmct_vrsn}}/conf/tmp_srvxml
      args:
        executable: /bin/bash

    - name: Copy from temp to server.xml
      shell: cp {{app_loc}}/apache-tomcat-{{tmct_vrsn}}/conf/tmp_srvxml {{app_loc}}/apache-tomcat-{{tmct_vrsn}}/conf/server.xml

    - name: Edit server.xml - Change SHUTDOWN port
      xml:
        path: "{{app_loc}}/apache-tomcat-{{tmct_vrsn}}/conf/server.xml"
        xpath: /Server
        attribute: port
        value: "{{sdown_port | string }}"

    - name: Edit server.xml - Add new Resource element - DB1
      xml:
        path: "{{app_loc}}/apache-tomcat-{{tmct_vrsn}}/conf/server.xml"
        xpath: /Server/GlobalNamingResources
        pretty_print: yes
        add_children:
          - Resource

    - name: Edit server.xml - set Resource attributes - DB1
      xml:
        path: "{{app_loc}}/apache-tomcat-{{tmct_vrsn}}/conf/server.xml"
        xpath: /Server/GlobalNamingResources/Resource[last()]
        attribute: "{{item.name}}"
        value: "{{item.value}}"
        pretty_print: yes
      with_items: "{{ DB1_Resources }}"

    - name: Edit server.xml - Remove existing HTTP/1.1 Connector
      xml:
        path: "{{app_loc}}/apache-tomcat-{{tmct_vrsn}}/conf/server.xml"
        xpath: /Server/Service/Connector[@protocol="HTTP/1.1"]
        state: absent

    - name: Edit server.xml - Add org.apache.coyote.http11.Http11NioProtocol Connector
      xml:
        path: "{{app_loc}}/apache-tomcat-{{tmct_vrsn}}/conf/server.xml"
        xpath: /Server/Service/Connector
        state: present

    - name: Edit server.xml - Add http11.Http11NioProtocol Connector attributes
      xml:
        path: "{{app_loc}}/apache-tomcat-{{tmct_vrsn}}/conf/server.xml"
        xpath: /Server/Service/Connector[last()]
        attribute: "{{item.name}}"
        value: "{{item.value}}"
        pretty_print: yes
      with_items: "{{http_nio}}"

    - name: Edit server.xml - Add SSLHostConfig for http_nio Connector
      xml:
        path: "{{app_loc}}/apache-tomcat-{{tmct_vrsn}}/conf/server.xml"
        xpath: /Server/Service/Connector/SSLHostConfig
        state: present

    - name: Edit server.xml - Add SSLHostConfig attributes for http_nio
      xml:
        path: "{{app_loc}}/apache-tomcat-{{tmct_vrsn}}/conf/server.xml"
        xpath: /Server/Service/Connector/SSLHostConfig
        attribute: "{{item.name}}"
        value: "{{item.value}}"
        pretty_print: yes
      with_items: "{{http_nio_sslconfig}}"

    - name: Edit server.xml - Add new Certificate child for SSLHostConfig
      xml:
        path: "{{app_loc}}/apache-tomcat-{{tmct_vrsn}}/conf/server.xml"
        xpath: /Server/Service/Connector/SSLHostConfig
        pretty_print: yes
        add_children:
          - Certificate

    - name: Edit server.xml - Add Certificate attributes
      xml:
        path: "{{app_loc}}/apache-tomcat-{{tmct_vrsn}}/conf/server.xml"
        xpath: /Server/Service/Connector/SSLHostConfig/Certificate
        attribute: "{{item.name}}"
        value: "{{item.value}}"
        pretty_print: yes
      with_items: "{{http_nio_sslconfig_cert}}"

    - name: Edit server.xml - Add AJP Connector
      xml:
        path: "{{app_loc}}/apache-tomcat-{{tmct_vrsn}}/conf/server.xml"
        xpath: /Server/Service
        add_children:
          - Connector

    - name: Edit server.xml - Add AJP Connector attributes
      xml:
        path: "{{app_loc}}/apache-tomcat-{{tmct_vrsn}}/conf/server.xml"
        xpath: /Server/Service/Connector[last()]
        attribute: "{{item.name}}"
        value: "{{item.value}}"
        pretty_print: yes
      with_items: "{{ajp_conn}}"

    - name: Edit server.xml - Add jvmRoute to Engine
      xml:
        path: "{{app_loc}}/apache-tomcat-{{tmct_vrsn}}/conf/server.xml"
        xpath: /Server/Service/Engine
        attribute: "jvmRoute"
        value: "{{jvmRoute}}"
        pretty_print: yes

    ## EDITING XMLS COMPLETED

    - name: Move folders/files from temp to a tomcat location
      shell: "mv {{backup_path}}/{{change_no}}/{{bld_no}}/to_copy/* {{app_loc}}/apache-tomcat-{{tmct_vrsn}}/"

    - name: Rename the new folder
      shell: "mv {{app_loc}}/apache-tomcat-{{tmct_vrsn}} {{app_loc}}/{{old_tmct}}/"

    - name: Create symbolic link
      shell: "cd {{app_loc}} ; rm {{sym_link}} ; ln -s {{old_tmct}} {{sym_link}}"

    - name: Remove temp from old Tomcat
      shell: cd {{app_loc}}/{{old_tmct}}_bkp ; rm -rf temp

    - name: Tar the existing OLD Tomcat
      archive:
        path: "{{app_loc}}/{{old_tmct}}_bkp"
        dest: "{{backup_path}}/{{change_no}}/{{bld_no}}/{{old_tmct}}.zip"
        format: zip
      register: tar_result

    - name: Remove the old Tomcat folder
      shell: "rm -rf {{app_loc}}/{{old_tmct}}_bkp"
      when: tar_result is succeeded

    - name: Start ClientVue
      shell: "cd {{app_loc}}/{{sym_link}} ; nohup {{app_loc}}/{{sym_link}}/bin/startup.sh &"
      register: start_output
      when: restart|lower == "yes"
      ignore_errors: yes

    - name: Show Start Output
      debug: var=start_output.stdout_lines
      when: restart|lower == "yes"

    - name: End of upgrade
      debug: msg="Playbook executed. Check logs"
